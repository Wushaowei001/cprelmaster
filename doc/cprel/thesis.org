#+TITLE:     Constraint Programming on Relations: theory, practice and implementation
#+AUTHOR:    Gustavo Gutierrez-Sabogal
#+EMAIL:     gustavo.ggutierrez@gmail.com
#+DATE:      2011-08-29 Mon
#+DESCRIPTION: 
#+KEYWORDS: 
#+LANGUAGE:  en
#+OPTIONS:   H:4 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 

#+LaTeX_CLASS: uclthesis
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{latexsym}
#+LATEX_HEADER: \usepackage{graphicx}
#+LaTeX_HEADER: \usepackage{minted}
#+LaTeX_HEADER: \usemintedstyle{emacs}
#+LaTeX_HEADER: \definecolor{codebg}{rgb}{0.95,0.95,0.95}
#+LaTeX_HEADER: \definecolor{codeframe}{rgb}{0.69,0.84,0.31}
#+LaTeX_HEADER: \renewcommand{\theFancyVerbLine}{\sffamily \textcolor[rgb]{0.5,0.5,1.0}{\scriptsize \oldstylenums{\arabic{FancyVerbLine}}}}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \newcommand{\universe}[1]{\ensuremath{\mathcal{U}_{#1}}}
#+LATEX_HEADER: \newcommand{\emptyrel}[1]{\ensuremath{\emptyset_{#1}}}
#+LATEX_HEADER: \newcommand{\tuple}[1]{\ensuremath{\langle t_{1},\ldots,t_{#1} \rangle}}
#+LATEX_HEADER: \newcommand{\arity}[1]{\ensuremath{arity(#1)}}
#+LATEX_HEADER: \newcommand{\compl}[1]{\ensuremath{\lnot #1}}
#+LATEX_HEADER: \newcommand{\inter}[2]{\ensuremath{#1\cap #2}}
#+LATEX_HEADER: \newcommand{\proj}[2]{\ensuremath{\underset{\scriptstyle #1}{\prod}(#2)}}
#+LATEX_HEADER: \newcommand{\perm}[2]{\ensuremath{\underset{\scriptstyle #2}{\sigma}(#1)}}
#+LATEX_HEADER: \newcommand{\join}[3]{\ensuremath{#1 \underset{\scriptstyle #2}{\Join} #3}}
#+LATEX_HEADER: \newcommand{\follow}[3]{\ensuremath{#1 \underbrace{\scriptstyle #2}_{\scriptstyle \/} #3}}
#+LATEX_HEADER: \newcommand{\followall}[3]{\ensuremath{#1 \underbrace{\scriptstyle #2}_{\scriptstyle \forall} #3}}
#+LATEX_HEADER: \newcommand{\glbo}{\ensuremath{\operatorname{glb}}}
#+LATEX_HEADER: \newcommand{\glb}[1]{\ensuremath{\glbo(#1)}}
#+LATEX_HEADER: \newcommand{\lubo}{\ensuremath{\operatorname{lub}}}
#+LATEX_HEADER: \newcommand{\lub}[1]{\ensuremath{\lubo(#1)}}
#+LATEX_HEADER: \newcommand{\unko}{\ensuremath{\operatorname{unk}}}
#+LATEX_HEADER: \newcommand{\unk}[1]{\ensuremath{\unko(#1)}}
#+LATEX_HEADER: \newcommand{\suffix}{\ensuremath{\operatorname{suffix}}}
#+LATEX_HEADER: \newcommand{\concat}{\ensuremath{\operatorname{concat}}}
#+LATEX_HEADER: \newcommand{\match}{\ensuremath{\operatorname{mathc}}}
#+LATEX_HEADER: \newcommand{\prefix}{\ensuremath{\operatorname{prefix}}}
#+LATEX_HEADER: \newcommand{\nth}{\ensuremath{\operatorname{nth}}}


* My own FAQ :noexport:
** Insert c++ source code
   Everything is ready for that, just add a block like:
   #+begin_src c++ :exports code
    x = str(y);
    class foo { foo(int x); };
    x = str(y)
    x = str(y)
    x = str(y)   
    x = str(y)
   #+end_src
  
** Verbatim text
   #+BEGIN_EXAMPLE
     $ mv gmp-4.3.2 gmp
     $ mv mpfr-2.4.2 mpfr
     $ mv mpc-0.8.1 mpc
   #+END_EXAMPLE

* TODO [0%] General things to be done 				   :noexport:
** TODO Create the converter to use Context instead of latex 
** TODO Improve latex definitions for the relation operations shortcuts 
** TODO Improve the definition of the tuple command in latex.
** TODO design the follow operator in tikz 
** TODO Change the mode from article to book when exporting the document
** TODO Fix the export to latex using uclthesis
   For now follow these instructions to export this document:
   - Try to export to late, it will fail saying that uclthesis is not defined
   - evaluate the contents of file:uclthesis.el
   - Try to export again, it should work this time
* Introduction
** Contributions
** Related work
* TODO [%] Relations as ground values :noexport:
** TODO explain that a relation is a set of tuples.
   For now it does not matter how tuples are considered or which kind
   of elements do they contain.
** TODO explain that there is a formal model behind relations: the relational algebra. :noexport:
** TODO explain that there are two ways of see a relation, as a set or by columns. :noexport:

* Relations as ground values
** What is a relation?
** The relational algebra notion of a relation or table
** Relations in constraint programming
   The goal of this section is to support the notion of /relation
   decision variable/. To achieve that we need to define what is going
   to be considered as a /value/ or an /assignment/ for that kind of
   variable. Moreover, in constraint programming we need these
   variables to range on a finite set of possible values and this is
   the reason for introducing the existence of a universe that will be
   used to support that.

   An important difference from the relational algebra is that the
   universe of elements is finite in constraint programming. This
   allows us to talk about the /complement/ operation and use it as a
   built in for other operations.

  
   As the relations that we will consider are restricted only to have
   integers as elements we define the set \universe{} as the biggest
   set containing all the possible integers that can be part of a
   relation:
   
   \begin{align*} 
   \universe{} = \{x : 0 \leq x \leq k \} 
   \end{align*}
   
   In this definition, $k$ represents an arbitrary big number that
   is fixed only for implementation purposes.
   
   After this definition of elements, we define a tuple as an
   ordered list of elements of \universe{}. A tuple $t$ of $n$
   elements is represented:
   
   \begin{align*} 
   t = \tuple{n}
   \end{align*}
  
   The number of elements in a tuple is called its /arity/. For the
   example above we have that $\arity{t}=n$. To refer to the elements
   at specific positions in the tuple we use the notation $\nth(t,k)$
   which will refer to the element at position $k$ of tuple $t$.
   
   With the definitions of tuple and the universe we can define for
   instance the universe of all the possible tuples of arity 2 as
   $\universe{}\times\universe{}$. In a general way we define:
   
   \begin{align*}
   \universe{k} = \underbrace{\universe{}\times\ldots\times\universe{}}_{k-times}
   \end{align*}
   
   as the universe for al the tuples of arity $k$. A relation is
   consider as a set of tuples of the *same* arity and then it is
   possible to write $R\subseteq\universe{k}$ for representing that
   $R$ is a set of tuples of arity $k$.
     
   It is also important to define the empty set (i.e. the empty
   relation) as the set that does not contain any tuple. In the same
   way that \universe{n} represents the universe of all the tuples of
   arity $n$ we define \emptyrel{n} as the empty set for tuples of the
   same arity.

   The next section uses the definitions introduced here to define a
   core set of operations on relations.

** Operations on relations
   Even when restricting the elements of a relation to be in
   $\universe{}$ we can still define the usual operations in relations
   that are presented in the relational algebra. A first group of
   operations deal with relations as if they were sets:

*** Complement
    The complement of a relation $R\subseteq\universe{n}$ is the relation: 
    
    \begin{align*}
    \compl{R} = \{t : t \in \universe{n} \land t \notin R\}
    \end{align*}
    
*** Intersection
    The intersection of two relations $R$ and $S$, both of them of
    the same arity, is the relation:
    
    \begin{align*}
    \inter{R}{S} = \{t : t \in R \land t \in S \}
    \end{align*}

    With this two operations it is possible to define other operations
    on relations (viewed as sets) like union, subset, etc.. Apart from
    these operations we can also use the ones from the relational
    algebra.
    
*** Projection
    Projecting a relation allows to obtain a relation of less
    arity. The operation takes two parameters: the relation itself and
    the set of columns to project on. For instance consider the follow
    relation:
     |-------+-------+-------|
     | C_{1} | C_{2} | C_{3} |
     |-------+-------+-------|
     |    42 |     5 |    38 |
     |    21 |     7 |     9 |
     |    43 |    12 |     1 |
     |-------+-------+-------|

    The relation resulting from projecting the relation above on the
    set of columns $\{C_{2},C_{3}\}$ is the relation:
    |-------+-------|
    | C_{1} | C_{2} |
    |-------+-------|
    |     5 |    38 |
    |     7 |     9 |
    |    12 |     1 |
    |-------+-------|

    Formally, projection a relation $R \subseteq \universe{n}$ on a
    set $P$ of column indexes, denoted  \proj{P}{R}, is defined as: 
    \begin{align*}
    \forall t \in R  \implies \exists t' \in \proj{P}{R}: \arity{t'}=|P|
    \land \forall i \in P : \nth(t',i) = \nth(t,i)
    \end{align*}

    We can deduce from this definition that
    $\proj{P}{R}\subseteq\universe{|P|}$. Moreover, projecting a
    relation on a set that contains all its columns will give as
    result the same relation while projecting it on an empty set will
    give \emptyrel{0}.
*** Quantification
**** Universal
**** Existencial
**** Unique
*** Permutation
    This operation allows to perform column reordering on
    relations. The parameters are:
    
    - A relation $R\subseteq\universe{n}$ to be permuted, and
    - a relation $P\subseteq\universe{2}$ that specifies how columns in
      the resulting relation correspond to columns in $R$.

    As an example consider the following relation to permute:
    |-------+-------+-------|
    | C_{1} | C_{2} | C_{3} |
    |-------+-------+-------|
    |    42 |     5 |    38 |
    |    21 |     7 |     9 |
    |    43 |    12 |     1 |
    |-------+-------+-------|

    and the permutation relation:
    |-------+-------|
    | C_{1} | C_{2} |
    |-------+-------|
    |     1 |     3 |
    |     2 |     2 |
    |     3 |     1 |
    |-------+-------|
    
    that describes that column 1 will be permuted with column 3 and
    that column 2 will remain at the same position. The resulting
    permutation is:
    |-------+-------+-------|
    | C_{3} | C_{2} | C_{1} |
    |-------+-------+-------|
    |    38 |     5 |    42 |
    |     9 |     7 |    21 |
    |     1 |    12 |    43 |
    |-------+-------+-------|

    This operation is well defined if and only if $P$ is injective and
    surjective and:

    \begin{align*}
    &\forall x, y : (x,y) \in P \implies x \in C(R) \land y \in C(R) \\
    &C(R)=\{1,\ldots,n\}
    \end{align*}
      
    The result of permuting a relation $R\subseteq\universe{n}$ with
    respect to a relation $N\subseteq \universe{2}$;  denoted
    \perm{R}{N} is defined as:
    
    \begin{align*}
    \forall t \in R  \implies \exists t' \in \perm{R}{N}: \forall i
    \in C(R) : \nth(t,i) = \nth(t',N(i))
    \end{align*}
    
*** TODO Join :noexport:
**** TODO [%] Define the following operations formally.
***** TODO Introduce the notion of Follow or division
    
*** Join
    
    Before introducing this operation we will introduce three
    different concepts on tuples that will be used by the definitions.
    Given the tuple $t=<t_1,\ldots,t_i,\ldots,t_n>$, we define:
    
    - $\prefix(t,i)$ :: the tuple of arity $i$ that contains the first
      $i$ elements of $t$.
    - $\suffix(t,i)$ :: the tuple of arity $i$ that contains the last $i$
      elements of $t$.
    - $\match(t,t',l)$ :: a boolean function that evaluates to /true/ if
      $\suffix(t,l)=\prefix(t',l)$ and /false/ otherwise.
    - $\concat(t,u)$ :: is the tuple resulting from appending tuples $t$
      and $u$.

    The join operation take two relations $R\subseteq\universe{n}$ and
    $S\subseteq\universe{m}$ as arguments. Additionally it takes an
    integer $j$ that describes on how many columns the join operation is
    going to be performed. The resulting relation, denoted $\join{R}{j}{S}$
    is a subset of $\universe{n+m-j}$ and is defined:
    
    \begin{align*}
    \forall r \in R \forall s \in S : match(r,s,j) \implies
    \concat(r,\suffix(s,m-j)) \in  \join{R}{j}{S}
    \end{align*}
    
    As an example, consider the two relations:
    |-------+-------+-------|
    | C_{1} | C_{2} | C_{3} |
    |-------+-------+-------|
    |    42 |     5 |    38 |
    |    21 |     7 |     9 |
    |    43 |    12 |     1 |
    |-------+-------+-------|
    
    |-------+-------+-------|
    | C_{3} | C_{2} | C_{1} |
    |-------+-------+-------|
    |     5 |    38 |     2 |
    |     5 |    38 |     4 |
    |    12 |     1 |     3 |
    |-------+-------+-------|

    The result of joining both relations on $j=2$ columns is:
    
    |-------+-------+-------+-------|
    | C_{1} | C_{2} | C_{3} | C_{4} |
    |-------+-------+-------+-------|
    |    42 |     5 |    38 |     2 |
    |    42 |     5 |    38 |     4 |
    |    43 |    12 |     1 |     3 |
    |-------+-------+-------+-------|

    An special case of the join operation is when $j=0$. From the
    definition, $match(t,u,0)$ will evaluate to /true/ always. In this
    case every possible combination of tuples will be part of the result
    and therefore it represents the cartesian product of the two
    relations.

    \begin{align*}
    R \times S = \join{R}{0}{S}
    \end{align*}
    
*** Summarizing (notion of cardinality)
* Relations as decision variables
   They represent a relation out of a possible sets of relations.
** Domain definition
*** What it really is in the mathematical sense
**** Lattice and power set definitions
***** Minimal and maximal elements
***** Operations that increase information in the lattice
*** How does is it approximated
*** How does is it implemented
** Kernel constraints
   Thes constraints define the basic prunning operations that can be
   performed on the decision variables. These operations must interact
   directly with the domain representation taking into account several
   aspects:
   
   - They must perform within a reasonable time complexity. As all the
     the constraint will rely on these operations for prunning, their
     time complexity plays a very important role.
   - The representation can only be updated in a way that can be
     recorded by the representation. They cannot offer prunning levels
     that cannot be represented by affecting the domain
     representation.

     Actually, the proposeddomain representation has a direct
     implication in the consistency level that can be achieved by any
     constraint on the decision variables in this system. Because we
     approximate the domain of a variable by two bounds, the only way
     of modifying the domain is by modifying them. For this reason no
     constraint can perform a prunning stronger than *bound
     consistency*.

     The basic prunning operations are:
     - Contracting the domain by removing information from the /upper
       bound/. This operation allows to reduce the domain by reducing
       the possible relations that can be represented in the
       domain. It is straight forward to see that this operation is
       monotonic: it always leads to an smaller domain.
       \begin{align*}
       \operatorname{exclude}(X,G) \equiv \forall t: t \in G \implies t \notin \lub{X}
       \end{align*}

     - Restricting the set of represented relations by including
       information in the /lower bound/. This operation will reduce the
       domain by augmenting the information known for the relations.
       \begin{align*}
       \operatorname{include}(X,G)\equiv \forall t: t\in G \implies t \in \glb{X}
       \end{align*}
       
** Domain information
   Apart from modfying the domain, we also define operations to query
   it. This operations will be used by the constraints to decide if
   prunning of the domain can be performed. It is also an strong
   requirement for this operations to have a reasonable time
   complexity as they are, in practice, more used than the
   modification operations described above.

   There are at least two different aspects of a domain representation
   that we are interested in query: the relations it represents and
   their cardinalities. The query operations related with the
   cardinality are:

   The *minimum cardinality* of all the represented relations. This
   information carresponds to the cardinality of the relation
   representing the lower bound:
  
   \begin{align*}
   \operatorname{cardMin}(X) = \operatorname{card}(\glb{X}) 
   \end{align*}
   
   The reason for this is that the lower bound represents the maximum
   relation that is known in the domain representation. Because this
   is the minimal of the lattice then there is no other known relation
   with less elements.

   In the same way, the *maximum cardinality* of the relations
   represented corresponds to the cardinality of the relation
   representing the upper bound.

   \begin{align*}
   \operatorname{cardMax}(X) = \operatorname{card}(\lub{X}) 
   \end{align*}
   
   The justification for this is analog to the one presented above:
   there is no relation in the domain that can be possible bigger than
   the upper bound. Therfore, the cardinality of the upper bound is
   the maximum possible cardinality of any relation in the domain.

   In addition to query the maximum and minimum cardinalities of the
   relations in a domain it is also useful to have mechanisms to query
   the relations itself. For this we define the operations /known/ and
   /possible/:

   \begin{align*}
   &\operatorname{known(X)} = \glb{X} \\
   &\operatorname{possible(X)} = \lub{X}
   \end{align*}

* Constraints on relation decision variables
** TODO Sets-like constraints :noexport:
*** TODO We are still missing other constraints like the ones in  file:../../cprel/prop/equality.cpp it should be possible to express them in terms of the others
*** These operations are defined in the code at file:../../cprel/prop/and.cpp
** Sets-like constraints
*** Complement
    This is a constraint on two relations $A$ and $B$ of the same
    arity and enforces the property that $A\equiv \compl{B}$.

  
*** Intersection
    
    This is a constraint on three relation decision variables of the
    same arity. It constraints $C$ to be the result of intersecting
    $A$ and $B$:

    \begin{align*}
    A& \cap B \equiv C \\
    A&\subseteq\universe{n}, B\subseteq\universe{n}, C\subseteq\universe{n}
    \end{align*}

    Table \ref{tab:derived-set-constraints} presents a
    list of other operations that we can get from complement and
    intersection.

    #+CAPTION: Derived constraints from complement and intersection.
    #+LABEL:   tab:derived-set-constraints
    |--------------------------------+-----------------------------------------|
    | Constraint                     | Equivalent                              |
    |--------------------------------+-----------------------------------------|
    | $A\cup B\equiv C$              | $\compl{A}\cap\compl{B}\equiv\compl{C}$ |
    | $A\subseteq B$                 | $A\cap\compl{B}\equiv\emptyrel{}$       |
    | $\operatorname{disjoint}(A,B)$ | $A\cap B\equiv\emptyrel{}$              |
    | $A\implies B\equiv C$          | $A\cap\compl{B}\equiv\compl{C}$         |
    |--------------------------------+-----------------------------------------|



** Relation-like constraints
*** TODO [0%] Projection 					   :noexport:
**** TODO Complete the explanation for the pruning of A in this constraint.
**** TODO Explain that the constraint takes a number of columns on the right part and not a set with column indices
*** Projection

   This constraints enforces that a relation decision variable
   $B\subseteq\universe{m}$ is the result of projecting another
   decision variable $A\subseteq\universe{n}$ on the set of column
   indices $P$. It is written:
   
   \begin{align*}
   \proj{P}{A} \equiv B
   \end{align*}

   For this constraint to be well defined we required:
   - $m=|P|$: preserves the requirements of the /join
		operation/ on relations.
   - $\forall x \in P : 1 \leq x \leq n$: ensures
	that $P$ only contains valid column indices.

     
   The pruning that this constraint is going to perform on both
   variables can be defined by the following propagation rules:
   - Pruning $A$: :: The fact that $n\geq m$ makes the pruning that
		     can be performed on $A$ weaker than the pruning
		     done for the other direction of the
		     constraint.
     - Consider tuples $\{a_0,a_1\}\subseteq \unk{A}$
       and $b\in \glb{B}$.
     - $\proj{P}{\{a_0,a_1\}}=\{b\}$ means that both $a_0$ and $a_1$
       can be valid supports for $b$. However this does not represents enough
       information to deduce that one or the other must be included
       in $A$. this decision can be taken only when we know that the
       support is unique.
     - If for some reason, all but one of the supports of $b$ become
       no longer part of the variable we need to include the
       remaining one in order to keep the constraint consistent.
     - Finally new bounds for $A$ are:
       - $\lub{B}\times\universe{n-p} \supseteq A$
       - $A \subseteq Uq\cap(\universe{n-p}\times\glb{B})$, where
	 $Uq$ represents the unique quantification of the elements in
	 the upper bound of $A$. This is, $Uq = (\exists!_{\{p+1,\ldots,n\}}\lub{A})\cap\lub{A}$

   - Pruning $B$: :: In this case it is enough to apply the
		     projection operation on both the lower and upper
		     bounds of $A$ to find the new bounds:
     - $B \subseteq \proj{P}{\glb{A}}$
     - $\proj{P}{\lub{A}} \supseteq B$
   
*** Permutation
*** Join
*** TODO [%] Follow :noexport:
**** TODO Write on the disadvantages of the implementation of this constraint in the well known case
**** TODO Elaborate on the notion of division in relational algebra and the correspondence to Follow
*** Follow
    \begin{align*}
    \follow{A}{f}{B}\equiv C
    \end{align*}
   
*** TODO [%] FollowAll :noexport:
**** TODO Explain why the FollowAll constraint can be expressed in terms of Follow
*** FollowAll
    \begin{align*}
    \followall{A}{f}{B}\equiv C
    \end{align*}

    This constraint is equivalent to:

    \begin{align*}
    \follow{A}{f}{\compl{B}}\equiv \compl{C}
    \end{align*}

**** TODO The following tables are work in progress and can be even incorrect

     |--------+--------+---------+--------+---------|
     | \vdots | \vdots | y_1     | \ldots | z_1     |
     | \vdots | \vdots | y_2     | \ldots | z_2     |
     | w      | x      | \vdots  | \ldots | \vdots  |
     | \vdots | \vdots | y_{n-1} | \ldots | z_{n-1} |
     | \vdots | \vdots | y_n     | \ldots | z_n     |
     |--------+--------+---------+--------+---------|

     followed by $|\{y_1,\ldots,z_1\}|$
     |---------+--------+---------+--------+--------|
     | y_0     | \ldots | z_0     | \vdots | \vdots |
     | y_1     | \ldots | z_1     | \vdots | \vdots |
     | y_2     | \ldots | z_2     | \vdots | \vdots |
     | \vdots  | \ldots | \vdots  | a      | b      |
     | y_{n-1} | \ldots | z_{n-1} | \vdots | \vdots |
     | y_n     | \ldots | z_n     | \vdots | \vdots |
     |---------+--------+---------+--------+--------|

*** FAAA
*** Summarize
* Relation with other decision variables
** TODO [%] Set decision variables :noexport:
*** TODO Mention channel constraint between a relation variable and an array of set vars
*** TODO Is it possible to say something about the cardinality here?
** Set decision variables
  From a mathematical point of view we can appreciate some
  similarities between relations and sets. For this reason is not
  surprising that also the decision variables share basically the same
  aspects.
  - A relation is a set of tuples. If we consider that a tuple can
    have any arity and therefor in particular one we can see that a
    relation of arity one is the same as a set. This applies to both,
    constant relations and decision variables. This similarity is
    exploited in the system by providing a channel constraint between
    a set and a relation decision variable.
  - Projecting a relation on one of its columns will give as result a
    set. This is an straight forward statement from the definition of
    the projection operation where its result will be a relation with
    the arity being equal to the cardinality of the set of column
    indices. There is no special constraint that exploits this
    similarity because this can be handled by the constraint mentioned
    in the item above.
** Integer decision variables
** Boolean variables
* Domain representation
** Which properties do we expect from the domain representation
*** Time complexity
**** Read operations happen often than write operations
*** Space complexty
*** A first approach, extentional
*** Binary decision diagrams to represent the domain
**** They have been used for complete domain representation of set decision variables.
* TODO [%] System implementation
** TODO Propagators to be done
*** TODO Cardinality
**** Summarize
     This constraint was proposed by Yves and takes as arguments two
     relation variables $A\subseteq\universe{k+m+n}$ and
     $C\subseteq\universe{k+n}$; an integer $n$ and one ground
     relation $B\subseteq\universe{3m}$.
     
     #+ATTR_LaTeX:  align=|p{3cm}|p{3cm}|p{3cm}|
     |----------------------------------------+----------------------------------------+-----------------------------------------------|
     | $\overbrace{\ldots,\ldots,\ldots}^{k}$ | $\overbrace{\ldots,\ldots,\ldots}^{n}$ | $\overbrace{\ldots,\ldots,\ldots}^{m}$        |
     |----------------------------------------+----------------------------------------+-----------------------------------------------|
     | group by ( one of these appear in $C$) | Columns we do not care about           | columns that will be grouped by the operation |
     |----------------------------------------+----------------------------------------+-----------------------------------------------|

     When looking at a relation as a table, this operation identifies three consecutive parts in it:
     - /Group by/ crieria :: This part contains $k$ columns of the
          relation. In this part the operator will identify the tuples
          that match the /group by/ criteria. This crieria will appear
          in the form of one tuple in the result of the operation.
     - /No care/ columns :: This correspons to columns that will be
          ignored by the operator. This part will not be part of any
          tuple in $C$. Columns of this part are located just after
          the columns of the first part.
     - /Group operation/ :: This is he part of the relation that will
          be processed with the ground relation $B$. For every group
          in the irst part of the relation, $B$ will return the
          operation on all the members of the group.

*** TODO Build system
**** TODO Fix gecode building with no Qt
     When gecode is built by the cmake script and QT is not present in
     the system there are missing symbols when trying to build the
     contribution. The cause is that some of the examples make use of
     gist without using any conditional compilation. The soluion
     should be as simple as wrap that code in GECODE_HAS_GIST ifdef.
* System's implementation
** An overview of the implementation of the system
*** Project website
    The implementation of the constraint system is available
    online. The documentation along with instructions on how to build
    it are available at: http://ggutierrez.github.com/cprelmaster/ and
    the development site where bugs can be submitted is:
    https://github.com/ggutierrez/cprelmaster.
**** Setup instructions
***** Supported operating systems
***** Requirements
***** Building
***** Installation
      
** Libraries used to implement it
*** Gecode
**** Variable specification
**** Complexity of the propagators
     In this case Gecode presents an advantage as its state of the art
     implementation of the propagation engine makes a more efficient
     use of the resources.
*** TODO CUDD :noexport:
**** TODO Complete with other ground relations that are implemented by CUDD and that we use directly. 
*** CUDD
    This is the library that we use to support the implementation of
    the domain representation of the constraint system. [[http://vlsi.colorado.edu/~fabio/CUDD/][CUDD]] presents
    several strong points that we take advantage of.

    - Provides support for implementing the domain representation
    - It has several advantages over the use of other libraries. For
      instance it provides a real implementation of complemented
      edges. Other libraries just implement ADDs and they do not
      provide the same time complexities guaranties.
    - Its use causes some interference with the parallel search
      architecture provided by Gecode. To maximize the possible
      sharing a /manager/ is used to store several /BDDs/ then what
      will happen if several threads try to access the same variable
      representation?.
    - It already provides some constant bdd representation for
      different constant relations. We do a direct use of them.
      - $R(x,y) = \{(x,y) : x = y\}$
      - $R(x,y) = \{(x,y) : x > y\}$
      - Others....

*** Other /BDD/ libraries
**** Buddy
     The [[http://buddy.sourceforge.net/manual/main.html][Buddy]] library.
**** JINC
     The [[http://jossowski.de/projects/jinc/jinc.html][JINC]] library.
     
     - Support for multithreading
     - Modern object oriented design

** Relation encoding on /BDDs/
*** TODO Implementation parameters :noexport:
    - $k$ as presented to define tha universe is represented in terms
      of $bbv$: file:../../bdddomain/manager.hh::23
    - Additionaly, we use $ba$ to represent the maximum arity that is
      handled at the BDD representation level. This is done at
      file:../../bdddomain/manager.hh::31
    - It is important to choose $bbv$ to use the same number of bits
      as an integer in gecode. This is to allow channel constraints to
      not cause overflows.
*** TODO Impact of the parameters
*** TODO Allow this parameters to be choosen at building time
** Simple program using relation constraints
* Study case: the package installability problem
** Constraint model
** Variables
** Constraints
** Search heuristics
** Benchmarks
** Other approaches that solve the problem
* Study case: music composition 
* PIP infrastructure
** Model and interaction among components
** Implementation
*** TODO [%] Parser implementation :noexport:
**** TODO Bison %code directive
     When I tried to build the parser in Mac OSX the %code directive
     is not supported by the bison version shipped with mac. This
     directive is needed in Linux because otherwise the code included
     by it wont be present at the right place in the generated file.

     As a workaround in mac we can use the a normal prologue section:
     %{ %}
*** A parser from CUDF to KCUDF
*** TODO [%] libkcudf implementation :noexport:
**** TODO cmake file is out of date with my knowledge of cmake
**** TODO drop the support for universal binaries and provide only support for gcc generic options
**** TODO remove the use of std::list where possible
*** Kernel-CUDF language
    The goal is to have something that is solver friendly in the sense
    that it can be easily parsed by it.
**** Language definition
**** Tools
     It consists of several components that interact together:
     - Translator: :: takes CUDF as an input and provides a KCUDF
                      representation of it.
     - Reducer: :: given a KCUDF specification this process tries to
                   find all the components of it that must participate
                   in the solving process.

* Experiments
** TODO [%] Implementation
*** TODO segmentation fault when iterating on the files of a directory
    This is produced on mac when using filesystem3 and the custom
    compiled gcc. Apple's gcc works fine.

    - work around :: The problem seems o be some linker path. If boost
                     is linked statically the problem disappear.

*** TODO more information from the reducer is needed.
    We need to know how many relations the reducer was able to drop
    because they were not needed. Also think about other useful
    information that can complement this.
*** TODO instance roblems
    There is a problem wih the instance:

    |------------+---+---+---+---------|
    | libnss3-1d | 0 | 0 | 0 | 1.1e-05 |
    |------------+---+---+---+---------|
    
    That is the result that is returned by *load* on the non reduced
    kcudf.

** Benchmarks for PIP
   The set of benchmarks used in these experiments were taken from
   users machines and randomly generated problems. There are several
   set of benchmarks present:
   |---------------+-------|
   | Benchmark set | Group |
   |---------------+-------|
   | 9orless       | A     |
   | 10orplus      | B     |
   | caixa         | C     |
   | rand.biglist  | D     |
   | rand.newlist  | E     |
   | rand.smallist | F     |
   |---------------+-------|
   

** Size of the relations in the package installability problem

   - General statistics that show how the tools perform on several
     instances.

     This first group of statistics measures the time for the parser,
     translator and reducer functions of the library. The column
     /State/ presents the output of the reducer. The following
     convenions are used:
     - ND\_SRCH :: The problem in he output needs the solver. When this
                  is the case, no information is present in the
                  column.
     - NO\_SOL :: The reducer /deduced/ hat the problem does no have
                  solution.
     - SOLVED :: The reducer as able o solve the problem and the
                 solver does not need to be run.

		 
     - <2011-09-12 Mon>
       |------------------------------+---------+-----------+---------+---------+-------|
       | Instance name                |   Parse | Translate |  Reduce | State   | Group |
       |------------------------------+---------+-----------+---------+---------+-------|
       | randa65dfb                   | 5.27266 |   22.4984 | 2.94574 | NO\_SOL | F     |
       | randa65f48                   | 5.32872 |    22.443 | 3.01229 | NO\_SOL | F     |
       | randab5933                   | 5.27702 |   22.4696 | 2.97544 | NO\_SOL | F     |
       | randbbb4ba                   | 5.27085 |   22.5844 | 2.96578 | NO\_SOL | F     |
       | randcbf550                   | 5.30088 |   22.4715 | 2.75661 | NO\_SOL | F     |
       | randcef367                   | 5.31488 |   22.5157 | 2.96342 | NO\_SOL | F     |
       | randd6bc17                   | 5.34197 |   10.8783 | 3.45583 |         | F     |
       | randdc506f                   | 5.30936 |   22.6851 | 2.79353 | NO\_SOL | F     |
       | randdd5509                   | 5.34199 |   22.6674 | 2.96711 | NO\_SOL | F     |
       | rande2165e                   | 5.28771 |    23.321 | 3.25559 | NO\_SOL | F     |
       | rande22180                   | 5.47494 |   22.9249 | 3.00198 | NO\_SOL | F     |
       | rande89f80                   | 5.35534 |   22.6624 |  2.9724 | NO\_SOL | F     |
       | randea4da3                   | 5.26848 |   22.5344 | 3.00242 | NO\_SOL | F     |
       | rand0c02bc                   | 9.02113 |   38.1948 | 8.86322 |         | D     |
       | rand13056c                   | 8.94678 |   38.0624 | 6.25343 | NO\_SOL | D     |
       | rand144372                   | 8.94315 |   37.9071 | 6.23059 | NO\_SOL | D     |
       | rand199fd6                   | 8.99937 |   38.1532 | 6.19191 | NO\_SOL | D     |
       | rand2d77b5                   | 9.03036 |   38.2726 | 6.35644 | NO\_SOL | D     |
       | rand2d8467                   | 8.96447 |   38.1656 | 8.90487 |         | D     |
       | rand35d0c8                   | 8.95043 |   38.1184 | 6.30329 | NO\_SOL | D     |
       | rand43bd88                   | 9.01809 |     38.05 | 8.74308 |         | D     |
       | rand4bf850                   | 9.05345 |   38.0508 | 8.72505 |         | D     |
       | rand5c0b12                   | 9.10323 |    38.084 | 6.33522 | NO\_SOL | D     |
       | rand659e05                   | 8.92617 |   38.1306 | 6.24994 | NO\_SOL | D     |
       | rand65d021                   | 9.00733 |   37.8455 | 8.79986 |         | D     |
       | rand6d579e                   | 8.91686 |   38.1749 |  6.3142 | NO\_SOL | D     |
       | rand8177e7                   | 8.97149 |   38.3113 |  8.7991 |         | D     |
       | rand902db1                   | 9.04851 |   19.0753 | 6.31145 | NO\_SOL | D     |
       | randa09fe9                   | 8.99005 |   38.1407 | 8.78044 |         | D     |
       | randa491d5                   | 9.11429 |   38.3665 | 6.26202 | NO\_SOL | D     |
       | randa6997e                   | 9.06988 |   38.1014 | 8.96777 |         | D     |
       | randaef248                   |  9.1108 |   38.4019 | 6.35604 | NO\_SOL | D     |
       | randaefc7c                   | 9.06998 |   18.9313 | 8.87779 |         | D     |
       | randb3c96d                   | 9.05068 |   38.2803 |  5.9278 | NO\_SOL | D     |
       | randb87834                   | 9.06585 |   38.3401 | 8.82254 |         | D     |
       | randbccf2d                   | 9.06727 |   38.2955 |  8.7654 |         | D     |
       | randd1cab2                   |   9.092 |   38.2098 | 8.83866 |         | D     |
       | randee102b                   | 9.07804 |   38.3097 | 6.39453 | NO\_SOL | D     |
       | randf7d077                   | 9.10962 |   38.2345 | 8.85322 |         | D     |
       | randfe95e3                   |  9.0699 |    38.439 | 6.27939 | NO\_SOL | D     |
       | ark                          | 7.38268 |   17.2682 |  9.2485 |         | A     |
       | audacious-plugins-extra      | 7.41923 |   17.2781 | 9.24403 |         | A     |
       | dpkg-dev                     | 7.27914 |     17.23 | 9.19031 |         | A     |
       | fcron                        | 7.39036 |   17.2622 | 8.93853 |         | A     |
       | gnash-common-opengl          | 7.38634 |   17.4343 | 9.14414 |         | A     |
       | gpc-4.1                      | 7.36843 |    17.267 | 8.81257 |         | A     |
       | gtwitter                     | 7.42615 |    17.366 | 8.97292 |         | A     |
       | inetutils-syslogd            |  7.3814 |   17.3255 | 9.26136 |         | A     |
       | kbd                          | 7.36927 |   17.3698 | 9.26664 |         | A     |
       | kblocks                      | 7.39994 |   17.3815 | 9.24314 |         | A     |
       | kdemultimedia-kio-plugins    | 7.39037 |   17.2722 | 9.30103 |         | A     |
       | kdessh                       | 7.38701 |   17.3304 | 9.23115 |         | A     |
       | kdesudo                      | 7.37744 |   17.2793 | 9.16462 |         | A     |
       | kfilereplace                 | 7.41724 |   17.4238 | 9.23411 |         | A     |
       | kjumpingcube                 | 7.39974 |   17.0562 | 9.46478 |         | A     |
       | kmines                       | 7.41286 |   17.0827 | 9.41853 |         | A     |
       | knetwalk                     | 7.34713 |   17.0947 |  9.4068 |         | A     |
       | kommander                    | 7.33913 |   17.1272 | 9.46557 |         | A     |
       | kphotoalbum                  | 7.31697 |   17.0861 | 9.45753 |         | A     |
       | ksystemlog                   | 7.32844 |   17.2795 | 9.53742 |         | A     |
       | ktouch                       | 7.33073 |   17.2044 | 9.49049 |         | A     |
       | kwin-style-crystal           | 7.32775 |   17.1315 | 9.51738 |         | A     |
       | libevolution3.0-cil          | 7.33212 |   17.0826 | 9.30571 |         | A     |
       | libgnokii4                   | 7.34696 |   17.0817 |  9.5066 |         | A     |
       | libmono-addins-gui0.2-cil    | 7.33404 |   17.0781 | 9.51556 |         | A     |
       | libmono-relaxng1.0-cil       | 7.37008 |   17.2083 | 9.43989 |         | A     |
       | libwnck2.20-cil              | 7.32391 |    17.109 | 9.44434 |         | A     |
       | mono-debugger                | 7.35266 |    17.233 | 9.48801 |         | A     |
       | mono-gac                     | 7.38054 |   17.2924 | 9.73277 |         | A     |
       | mono-mcs                     |  7.4811 |   17.5259 | 9.64008 |         | A     |
       | openoffice.org-draw          | 7.51129 |   17.4847 | 9.65803 |         | A     |
       | plasma-dataengines-workspace | 7.52133 |   17.4123 | 9.61167 |         | A     |
       | plasma-widgets-workspace     | 7.51208 |   17.5717 | 9.68221 |         | A     |
       | r-cran-car                   | 7.53111 |   17.4026 | 9.71176 |         | A     |
       | r-cran-lme4                  | 7.49015 |   17.4893 | 9.75082 |         | A     |
       | r-cran-rodbc                 | 7.51232 |   17.5296 | 9.73554 |         | A     |
       | tasque                       | 7.50071 |   17.5371 | 9.69433 |         | A     |
       | upstart-compat-sysv          | 7.51557 |   17.4602 | 9.55746 |         | A     |
       |------------------------------+---------+-----------+---------+---------+-------|
       
     - <2011-09-09 Fri>       
       |------------------------------------+---------+-----------+---------+---------+-------|
       | Instance name                      |   Parse | Translate |  Reduce | State   | Group |
       |------------------------------------+---------+-----------+---------+---------+-------|
       | codebreaker                        | 7.53151 |   17.1597 | 8.94164 |         | B     |
       | dwww                               | 7.53606 |   17.1671 | 9.19521 |         | B     |
       | epiphany-browser                   | 7.54502 |   17.2429 |  9.1394 |         | B     |
       | evolution-dev                      | 7.53558 |   17.2166 | 9.20169 |         | B     |
       | gnochm                             | 7.52841 |   17.2361 | 9.15517 |         | B     |
       | gnome-panel-data                   | 7.52902 |   17.3122 | 9.16844 |         | B     |
       | guake                              | 7.52074 |   17.2945 | 8.87171 |         | B     |
       | hal-cups-utils                     | 7.53777 |   17.3212 | 9.11696 |         | B     |
       | idle                               | 7.51897 |   17.2844 | 9.18476 |         | B     |
       | kdebase-bin                        | 7.54534 |    17.286 | 9.25091 |         | B     |
       | konq-plugins                       | 7.59574 |    17.384 | 9.23175 |         | B     |
       | libbsd-resource-perl               | 7.51107 |   17.2554 | 9.20956 |         | B     |
       | libcatalyst-perl                   | 7.52771 |   17.2184 | 9.19588 |         | B     |
       | libcurses-perl                     | 7.55242 |   17.6866 | 9.34863 |         | B     |
       | libcyrus-imap-perl22               | 7.54435 |   17.4218 | 9.11563 |         | B     |
       | libdbd-pg-perl                     | 7.58858 |   17.2199 | 9.27803 |         | B     |
       | libhtml-parser-perl                | 7.51887 |   17.2284 | 9.22885 |         | B     |
       | libmail-spf-perl                   | 7.52374 |   17.3396 | 9.36031 |         | B     |
       | libnkf-perl                        | 7.55381 |   17.2551 | 9.10224 |         | B     |
       | libnspr4-dev                       | 7.54409 |   17.2531 | 9.27164 |         | B     |
       | libnss3-1d                         | 7.41931 |    17.001 | 9.15781 |         | B     |
       | libpango-perl                      | 7.51323 |   17.2185 | 9.05561 |         | B     |
       | libpoe-perl                        | 7.44377 |   17.0048 |  9.1203 |         | B     |
       | libtemplate-provider-encoding-perl | 7.39022 |   17.0572 | 9.11853 |         | B     |
       | lirc                               | 7.40536 |   17.1422 | 9.01403 |         | B     |
       | mercurial-common                   | 7.48508 |   17.2525 | 9.21871 |         | B     |
       | monodevelop-nunit                  | 7.42696 |   17.1925 | 9.23653 |         | B     |
       | openoffice.org-l10n-da             | 7.44748 |   17.2435 | 9.21474 |         | B     |
       | openoffice.org-l10n-nl             |  7.5055 |   17.3365 | 9.20036 |         | B     |
       | pidgin-plugin-pack                 | 7.47945 |   17.2283 | 8.92911 |         | B     |
       | pybackpack                         | 7.36421 |   17.1811 |  9.1957 |         | B     |
       | python-cairo                       | 7.44435 |   17.1734 | 9.52386 |         | B     |
       | python-hippocanvas                 | 7.50576 |   17.5549 | 9.25899 |         | B     |
       | sonata                             | 7.41302 |   17.1508 | 9.24633 |         | B     |
       | synaptic                           | 7.38547 |   17.5469 | 9.46012 |         | B     |
       | system-config-printer              | 7.51224 |   17.4152 | 9.10394 |         | B     |
       | texlive-generic-recommended        | 7.37659 |   17.4146 | 9.30122 |         | B     |
       | txt2html                           | 7.47997 |   17.5543 | 9.33384 |         | B     |
       | unattended-upgrades                | 7.53027 |   17.4068 | 9.18918 |         | B     |
       | xvfb                               | 7.43632 |   17.3677 | 9.32164 |         | B     |
       | rand03b0b5                         | 5.34267 |   22.6947 | 2.95711 | NO\_SOL | F     |
       | rand1958fb                         | 5.35521 |    22.638 | 2.99035 | NO\_SOL | F     |
       | rand2fa1f8                         | 5.32974 |   22.5397 | 2.75237 | NO\_SOL | F     |
       | rand35afbf                         | 5.31484 |   22.5161 | 2.98101 | NO\_SOL | F     |
       | rand396cf8                         | 5.30638 |   22.5853 | 2.98956 | NO\_SOL | F     |
       | rand49e642                         | 5.43813 |   22.7286 | 2.98577 | NO\_SOL | F     |
       | rand56b853                         | 5.32315 |   22.6248 | 2.98875 | NO\_SOL | F     |
       | rand59f7dd                         | 5.32181 |   22.5908 | 2.98521 | NO\_SOL | F     |
       | rand601ba8                         | 5.31271 |   22.5535 | 2.99042 | NO\_SOL | F     |
       | rand682c92                         | 5.31532 |   22.5385 |  2.8286 | NO\_SOL | F     |
       | rand6c4744                         | 5.29927 |   22.4669 | 2.96123 | NO\_SOL | F     |
       | rand6f4585                         | 5.31223 |   22.4333 |  2.9844 | NO\_SOL | F     |
       | rand7e9372                         | 5.29903 |   22.4325 | 2.98785 | NO\_SOL | F     |
       | rand88811a                         | 5.32401 |   22.6084 | 2.98943 | NO\_SOL | F     |
       | rand936b0d                         | 5.32126 |    22.431 | 2.99247 | NO\_SOL | F     |
       | rand9e35f0                         | 5.32822 |   22.5518 | 3.64427 |         | F     |
       | randa13f2d                         | 5.36954 |   22.7315 | 3.69437 |         | F     |
       |------------------------------------+---------+-----------+---------+---------+-------|
      
      
     - <2011-09-02 Fri>
       |-----------------------------+-------------+-----------------+--------------|
       | Problem                     | Parsing (s) | Translating (s) | Reducing (s) |
       |-----------------------------+-------------+-----------------+--------------|
       | codebreaker.cudf            |     7.47771 |          9.2886 |      3.38545 |
       | dpkg-dev.cudf               |     7.44725 |         9.29764 |      3.47013 |
       | fcron.cudf                  |     7.48727 |         9.40373 |       3.4305 |
       | libgnokii4.cudf             |     7.52728 |         9.42241 |       3.4593 |
       | libnss3-1d.cudf             |     7.49822 |         9.35437 |      3.49358 |
       | mercurial-common.cudf       |     7.49112 |         9.49861 |      3.48125 |
       | mono-gac.cudf               |     7.65299 |         9.38672 |      3.57372 |
       | openoffice.org-l10n-da.cudf |     7.59518 |         9.48585 |      3.54366 |
       | tasque.cudf                 |     7.57444 |         9.44606 |      3.52883 |
       | unattended-upgrades.cudf    |     7.61505 |         9.51398 |      3.51486 |
       |-----------------------------+-------------+-----------------+--------------|
    

   - Translation specific statistics
     |-----------------------------+----------------+-----------------|
     | Problem                     | Installed Pkgs | Consistent Pkgs |
     |-----------------------------+----------------+-----------------|
     | codebreaker.cudf            |           2961 |            2896 |
     | dpkg-dev.cudf               |           2960 |            2896 |
     | fcron.cudf                  |           2961 |            2896 |
     | libgnokii4.cudf             |           2960 |            2896 |
     | libnss3-1d.cudf             |           2960 |            2896 |
     | mercurial-common.cudf       |           2960 |            2896 |
     | mono-gac.cudf               |           2960 |            2896 |
     | openoffice.org-l10n-da.cudf |           2960 |            2896 |
     | tasque.cudf                 |           2960 |            2896 |
     | unattended-upgrades.cudf    |           2960 |            2896 |
     |-----------------------------+----------------+-----------------|
   
   - Reducer specific statistics

   - Times to load the relations from kcudf packages to ground relations

     - The following times are taken on normal instances, as they are
       output by the translator.
       
       - <2011-09-09 Fri>
         |----------------------+--------------+-----------+----------+----------|
         | Instance name        | Dependencies | Conflicts | Provides | Load (s) |
         |----------------------+--------------+-----------+----------+----------|
         | ark                  |       404070 |     91830 |   116849 |  61.0731 |
         | codebreaker          |       404070 |     91830 |   116849 |  58.7977 |
         | dpkg-dev             |       404070 |     91830 |   116849 |  59.4491 |
         | dwww                 |       404070 |     91830 |   116849 |  60.0817 |
         | epiphany-browser     |       404070 |     91830 |   116849 |  59.2349 |
         | evolution-dev        |       404070 |     91830 |   116849 |   58.538 |
         | gnochm               |       404070 |     91830 |   116849 |  58.7689 |
         | gnome-panel-data     |       404070 |     91830 |   116849 |   58.955 |
         | guake                |       404070 |     91830 |   116849 |  58.6447 |
         | hal-cups-utils       |       404070 |     91830 |   116849 |  58.7232 |
         | idle                 |       404070 |     91830 |   116849 |  59.0856 |
         | kbd                  |       404070 |     91830 |   116849 |   58.756 |
         | kdebase-bin          |       404070 |     91830 |   116849 |  59.1321 |
         | konq-plugins         |       404070 |     91830 |   116849 |  59.0516 |
         | libbsd-resource-perl |       404070 |     91830 |   116849 |  59.3166 |
         | libcatalyst-perl     |       404070 |     91830 |   116849 |  66.1356 |
         | libcurses-perl       |       404070 |     91830 |   116849 |  65.1467 |
         | libcyrus-imap-perl22 |       404070 |     91830 |   116849 |  65.2596 |
         | libdbd-pg-perl       |       404070 |     91830 |   116849 |  62.6958 |
         | libhtml-parser-perl  |       404070 |     91830 |   116849 |  62.6192 |
         | libmail-spf-perl     |       404070 |     91830 |   116849 |  67.3246 |
         | libnkf-perl          |       404070 |     91830 |   116849 |  65.2831 |
         | libnspr4-dev         |       404070 |     91830 |   116849 |  62.3625 |
         |----------------------+--------------+-----------+----------+----------|
        
     - The following times were taken *on reduced instances*. This means,
       he instances produced by the reducer.
       
       An interesting aspect of this test is that it uses the same bdd
       manager for all the instances. This is, no new manager is
       creaed between two different instances. Even more interesting
       is the fact that the memmory used during all the run of the
       program never goes more than 80 megabytes.

       During these tests no tunning o the bdd manager is done. It
       uses the same configuration that comes by default in CUDD.

       - <2011-09-09 Fri>
         |----------------------+--------------+-----------+----------+----------|
         | Instance name        | Dependencies | Conflicts | Provides | Load (s) |
         |----------------------+--------------+-----------+----------+----------|
         | ark                  |       123014 |     18972 |    47665 |   16.777 |
         | codebreaker          |       104449 |     17820 |    44972 |  14.9274 |
         | dpkg-dev             |       122857 |     18950 |    47602 |  16.9693 |
         | dwww                 |       123071 |     18978 |    47680 |  16.9846 |
         | epiphany-browser     |       122937 |     18946 |    47631 |  16.9889 |
         | evolution-dev        |       123179 |     19008 |    47733 |  17.0116 |
         | gnochm               |       122097 |     18966 |    47652 |  16.8054 |
         | gnome-panel-data     |       123014 |     18972 |    47665 |  17.0823 |
         | guake                |        97152 |     17554 |    44132 |  14.2352 |
         | hal-cups-utils       |       109045 |     17934 |    45199 |  15.5774 |
         | idle                 |       123026 |     18974 |    47669 |   17.209 |
         | kbd                  |       123012 |     18970 |    47662 |  16.9377 |
         | kdebase-bin          |       123005 |     18972 |    47665 |  17.1071 |
         | konq-plugins         |       123015 |     18972 |    47665 |  17.0862 |
         | libbsd-resource-perl |       123016 |     18972 |    47665 |  17.2277 |
         | libcatalyst-perl     |       123467 |     19046 |    47825 |   17.358 |
         | libcurses-perl       |       123030 |     18974 |    47669 |  17.1605 |
         | libcyrus-imap-perl22 |       108357 |     17812 |    44919 |  15.5239 |
         | libdbd-pg-perl       |       123015 |     18972 |    47665 |  17.1469 |
         | libhtml-parser-perl  |       122995 |     18972 |    47665 |  17.1752 |
         | libmail-spf-perl     |       121860 |     18828 |    47276 |  16.9846 |
         | libnkf-perl          |       109244 |     17876 |    45100 |  15.5976 |
         | libnspr4-dev         |       123038 |     18984 |    47677 |  17.1984 |
         |----------------------+--------------+-----------+----------+----------|

	 

   - Meory meassurements for loading the relations of the different instances in gecode.
     (Taken on: <2011-09-12 Mon>)
     |---------------------------+------------+-----------+------------+-----------------+-----------+----------|
     | Instance                  | Gecode Mem | Read time | Solve time | Bdd Mem (bytes) | GC (sec.) | GC calls |
     |---------------------------+------------+-----------+------------+-----------------+-----------+----------|
     | ark                       |     329584 |   16.5548 |   0.001795 |        60055712 |      2390 |       36 |
     | audacious-plugins-extra   |     329584 |   16.7979 |   0.001921 |        59171840 |      2413 |       36 |
     | codebreaker               |     313200 |   14.6579 |   0.001779 |        58778944 |      2043 |       32 |
     | dpkg-dev                  |     329584 |   16.7917 |   0.001769 |        59630144 |      2395 |       36 |
     | dwww                      |     329584 |   16.7595 |   0.001893 |        58909952 |      2417 |       36 |
     | epiphany-browser          |     329584 |   16.6794 |   0.001806 |        59630144 |      2381 |       36 |
     | evolution-dev             |     329584 |   16.7397 |   0.001813 |        59924768 |      2381 |       36 |
     | fcron                     |     313200 |   15.0159 |   0.001867 |        58353376 |      2046 |       32 |
     | gnash-common-opengl       |     329584 |   16.8481 |    0.00183 |        58713536 |      2417 |       36 |
     | gnochm                    |     329584 |   16.7433 |   0.001863 |        59466464 |      2412 |       36 |
     | gnome-panel-data          |     329584 |    16.756 |   0.001859 |        59826560 |      2379 |       36 |
     | gpc-4.1                   |     296816 |   14.0108 |   0.001692 |        58353376 |      1986 |       31 |
     | gtwitter                  |     313200 |   14.3458 |   0.002219 |        57665888 |      1925 |       31 |
     | guake                     |     305008 |   14.0421 |   0.001973 |        57436736 |      1886 |       30 |
     | hal-cups-utils            |     313200 |   15.2316 |   0.001793 |        59171776 |      2151 |       33 |
     | idle                      |     329584 |   16.8118 |   0.001808 |        58517120 |      2414 |       36 |
     | inetutils-syslogd         |     329584 |    16.749 |   0.001785 |        59892032 |      2384 |       36 |
     | kbd                       |     329584 |   17.2297 |   0.001808 |        58517120 |      2442 |       36 |
     | kblocks                   |     329584 |   16.9877 |   0.001877 |        58746272 |      2444 |       36 |
     | kdebase-bin               |     329584 |   17.2108 |   0.001755 |        58811744 |      2440 |       36 |
     | kdemultimedia-kio-plugins |     329584 |   17.0889 |    0.00181 |        59073632 |      2420 |       36 |
     | kdessh                    |     329584 |   17.1147 |   0.001779 |        59630144 |      2403 |       36 |
     | kdesudo                   |     329584 |   17.0233 |   0.001816 |        59335520 |      2339 |       35 |
     | kfilereplace              |     329584 |   17.2154 |   0.001758 |        59139104 |      2424 |       36 |
     | kjumpingcube              |     329584 |   16.6671 |   0.001751 |        60055712 |      2409 |       36 |
     | kmines                    |     329584 |    17.006 |   0.001879 |        58975424 |      2433 |       36 |
     | knetwalk                  |     329584 |   16.7861 |   0.001819 |        59728352 |      2412 |       36 |
     | kommander                 |     329584 |   16.6853 |   0.001867 |        59924768 |      2379 |       36 |
     | konq-plugins              |     329584 |    16.949 |   0.001779 |        59073632 |      2414 |       36 |
     | kphotoalbum               |     329584 |   17.0421 |    0.00177 |        58746272 |      2426 |       36 |
     |---------------------------+------------+-----------+------------+-----------------+-----------+----------|
    




   Experiments were taken in:
   #+BEGIN_EXAMPLE
   Darwin snyders.info.ucl.ac.be 10.8.0 Darwin Kernel Version 10.8.0. 
   root:xnu-1504.15.3~1/RELEASE_I386 i386
   #+END_EXAMPLE



